name: DevSecOps Pipeline for OWASP Juice Shop

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Juice Shop Docker Image
        run: docker build -t juice-shop:latest .

  sast:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Semgrep for SAST
        uses: returntocorp/semgrep-action@v1
        with:
          config: 'p/security-audit'
          report: true
          sarif: true

      - name: Upload Semgrep Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: semgrep.sarif

  sca:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install OWASP Dependency-Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v7.0.4/dependency-check-7.0.4-release.zip
          unzip dependency-check-7.0.4-release.zip -d dependency-check

      - name: Run OWASP Dependency-Check for SCA
        run: |
          ./dependency-check/bin/dependency-check.sh --scan . --format HTML --out dependency-check-report.html

      - name: Upload SCA Report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: dependency-check-report.html

  container_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Scan Juice Shop Docker Image with Trivy
        uses: aquasecurity/trivy-action@v0.7.0
        with:
          image-ref: juice-shop:latest
          format: 'table'
          ignore-unfixed: true

      - name: Upload Trivy Report
        uses: actions/upload-artifact@v3
        with:
          name: trivy-report
          path: trivy-report.txt

  dast:
    runs-on: ubuntu-latest
    services:
      juice-shop:
        image: juice-shop/juice-shop
        options: --health-cmd="curl -f http://localhost:3000 || exit 1" --health-interval=30s --health-timeout=10s --health-retries=5
        ports:
          - 3000:3000
    steps:
      - name: Install OWASP ZAP
        run: sudo apt-get update && sudo apt-get install zaproxy -y

      - name: Run OWASP ZAP Baseline Scan
        run: |
          zap-baseline.py -t http://localhost:3000 -r zap-report.html || true

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: zap-report.html

  deploy:
    runs-on: ubuntu-latest
    needs: [build, sast, sca, container_scan, dast]
    steps:
      - name: Deploy Juice Shop to Testing Environment
        run: echo "Deployment step - deploy the Juice Shop app to a test environment."

      - name: Print Deployment Success
        run: echo "Deployment completed successfully."
